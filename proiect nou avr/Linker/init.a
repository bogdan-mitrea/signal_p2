;/* initialization file */
;
;#include <mega164a.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x01
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x0E
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x04
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x06
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x0C
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x0E
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x02
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=smcr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;#include "defs.h"
;
;
;/*
; * most intialization values are generated using Code Wizard and depend on clock value
; */
;void Init_initController(void)
; 0000 000D {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 000E // Crystal Oscillator division factor: 1
; 0000 000F #pragma optsize-
; 0000 0010 CLKPR=0x80;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 0011 CLKPR=0x00;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 0012 #ifdef _OPTIMIZE_SIZE_
; 0000 0013 #pragma optsize+
; 0000 0014 #endif
; 0000 0015 
; 0000 0016 // Input/Output Ports initialization
; 0000 0017 // Port A initialization
; 0000 0018 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 0019 DDRA=0b00001111; // PORTA 7-4 In , PORTA 3-0 Out
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 001A PORTA=0b11111111; // Pull up - PORTA 7-4 (in) , out in logic 1 - PORTA 3-0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 001B 
; 0000 001C // Port B initialization    - outputs
; 0000 001D DDRB=0x0F;
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 001E PORTB=0x00;
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 001F 
; 0000 0020 // Port C initialization
; 0000 0021 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 0022 DDRC=0b11111111; // PORTC out
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0023 PORTC = 0b00000000; //PORTC out in 0 logic
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0024 
; 0000 0025 // Port D initialization
; 0000 0026 PORTD=0b00100000; // D.5 needs pull-up resistor
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0027 DDRD= 0b01010000; // D.6 is LED, D.4 is test output
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0028 
; 0000 0029 // Timer/Counter 0 initialization
; 0000 002A // Clock source: System Clock
; 0000 002B // Clock value: Timer 0 Stopped
; 0000 002C // Mode: Normal top=FFh
; 0000 002D // OC0 output: Disconnected
; 0000 002E TCCR0A=0x00;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 002F TCCR0B=0x00;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0030 TCNT0=0x00;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0031 OCR0A=0x00;
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0032 OCR0B=0x00;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0033 
; 0000 0034 // Timer/Counter 1 initialization
; 0000 0035 // Clock source: System Clock
; 0000 0036 // Clock value: 19.531 kHz = CLOCK/256
; 0000 0037 // Mode: CTC top=OCR1A
; 0000 0038 // OC1A output: Discon.
; 0000 0039 // OC1B output: Discon.
; 0000 003A // Noise Canceler: Off
; 0000 003B // Input Capture on Falling Edge
; 0000 003C // Timer 1 Overflow Interrupt: Off
; 0000 003D // Input Capture Interrupt: Off
; 0000 003E // Compare A Match Interrupt: On
; 0000 003F // Compare B Match Interrupt: Off
; 0000 0040 
; 0000 0041 TCCR1A=0x00;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0042 TCCR1B=0x0D;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0043 TCNT1H=0x00;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0044 TCNT1L=0x00;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0045 ICR1H=0x00;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0046 ICR1L=0x00;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0047 
; 0000 0048 // 1 sec = 19531 counts = 4C4BH counts
; 0000 0049 // 4C4BH = 4CH (MSB) and 4BH (LSB)
; 0000 004A 
; 0000 004B 
; 0000 004C //1 sec
; 0000 004D //OCR1AH=0x4C;
; 0000 004E //OCR1AL=0x4B;
; 0000 004F 
; 0000 0050 // 20 ms
; 0000 0051 OCR1AH=0x01;
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 0052 OCR1AL=0x86;
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 0053 
; 0000 0054 //OCR1AH=0x00;
; 0000 0055 //OCR1AL=0x40;
; 0000 0056 
; 0000 0057 
; 0000 0058 OCR1BH=0x00;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0059 OCR1BL=0x00;
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 005A 
; 0000 005B // Timer/Counter 2 initialization
; 0000 005C // Clock source: System Clock
; 0000 005D // Clock value: Timer2 Stopped
; 0000 005E // Mode: Normal top=0xFF
; 0000 005F // OC2A output: Disconnected
; 0000 0060 // OC2B output: Disconnected
; 0000 0061 ASSR=0x00;
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0062 TCCR2A=0x00;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0063 TCCR2B=0x00;
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0064 TCNT2=0x00;
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0065 OCR2A=0x00;
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0066 OCR2B=0x00;
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 0067 
; 0000 0068 // External Interrupt(s) initialization
; 0000 0069 // INT0: Off
; 0000 006A // INT1: Off
; 0000 006B // INT2: Off
; 0000 006C // Interrupt on any change on pins PCINT0-7: Off
; 0000 006D // Interrupt on any change on pins PCINT8-15: Off
; 0000 006E // Interrupt on any change on pins PCINT16-23: Off
; 0000 006F // Interrupt on any change on pins PCINT24-31: Off
; 0000 0070 EICRA=0x00;
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 0071 EIMSK=0x00;
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 0072 PCICR=0x00;
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 0073 
; 0000 0074 // Timer/Counter 0,1,2 Interrupt(s) initialization
; 0000 0075 TIMSK0=0x00;
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 0076 TIMSK1=0x02;
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 0077 TIMSK2=0x00;
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 0078 
; 0000 0079 // USART0 initialization
; 0000 007A // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0000 007B // USART0 Receiver: On
; 0000 007C // USART0 Transmitter: On
; 0000 007D // USART0 Mode: Asynchronous
; 0000 007E // USART0 Baud rate: 9600
; 0000 007F UCSR0A=0x00;
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 0080 UCSR0B=0xD8;
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 0081 UCSR0C=0x06;
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 0082 UBRR0H=0x00;
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 0083 UBRR0L=0x81;
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 0084 
; 0000 0085 // USART1 initialization
; 0000 0086 // USART1 disabled
; 0000 0087 UCSR1B=0x00;
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 0088 
; 0000 0089 
; 0000 008A // Analog Comparator initialization
; 0000 008B // Analog Comparator: Off
; 0000 008C // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 008D ACSR=0x80;
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 008E ADCSRB=0x00;
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 008F DIDR1=0x00;
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0000 0090 
; 0000 0091 // Watchdog Timer initialization
; 0000 0092 // Watchdog Timer Prescaler: OSC/2048
; 0000 0093 #pragma optsize-
; 0000 0094 
; 0000 0095 /*
; 0000 0096 #asm("wdr")
; 0000 0097 // Write 2 consecutive values to enable watchdog
; 0000 0098 // this is NOT a mistake !
; 0000 0099 WDTCSR=0x18;
; 0000 009A WDTCSR=0x08;
; 0000 009B */
; 0000 009C 
; 0000 009D //  disable JTAG
; 0000 009E    MCUCR|= (1<<JTD);
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 009F    MCUCR|= (1<<JTD);
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 00A0 
; 0000 00A1 #ifdef _OPTIMIZE_SIZE_
; 0000 00A2 #pragma optsize+
; 0000 00A3 #endif
; 0000 00A4 
; 0000 00A5 }
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;
;
;
